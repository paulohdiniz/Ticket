# Generated by Django 5.0.3 on 2024-04-12 16:08

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_doctor", models.BooleanField(default=False)),
                ("is_customer", models.BooleanField(default=False)),
                ("username", models.CharField(max_length=20)),
                ("first_name", models.CharField(max_length=20)),
                (
                    "user_type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "customer"),
                            (2, "profissionalsaude"),
                            (3, "admin"),
                        ],
                        null=True,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Agendamento",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(null=True)),
                ("hora", models.TimeField(null=True)),
                ("local", models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("cpf", models.CharField(max_length=14, null=True, unique=True)),
                ("idade", models.PositiveIntegerField(null=True)),
                ("endereco", models.CharField(max_length=255, null=True)),
                ("cep", models.CharField(max_length=10, null=True)),
                ("pais", models.CharField(max_length=100, null=True)),
                (
                    "agendamentos",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cliente",
                        to="base.agendamento",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Chat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(null=True)),
                ("hora", models.TimeField(null=True)),
                ("local", models.CharField(max_length=500, null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.customer"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="agendamento",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="base.customer"
            ),
        ),
        migrations.CreateModel(
            name="ProfissionalSaude",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                ("is_acompanhante", models.BooleanField(default=False)),
                ("especialidade", models.CharField(max_length=100)),
                ("registro", models.CharField(max_length=20, null=True, unique=True)),
                (
                    "agendamentos",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profissional",
                        to="base.agendamento",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("texto", models.CharField(max_length=500)),
                ("data", models.DateField(null=True)),
                ("hora", models.TimeField(null=True)),
                (
                    "chat",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.chat"
                    ),
                ),
                (
                    "profissionais_saude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.profissionalsaude",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="customer",
            name="profissionais_saude",
            field=models.ManyToManyField(to="base.profissionalsaude"),
        ),
        migrations.CreateModel(
            name="Consulta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("data", models.DateField(null=True)),
                ("hora", models.TimeField(null=True)),
                ("local", models.CharField(max_length=255, null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="base.customer"
                    ),
                ),
                (
                    "profissional_saude",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="base.profissionalsaude",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="chat",
            name="profissionais_saude",
            field=models.ManyToManyField(to="base.profissionalsaude"),
        ),
        migrations.AddField(
            model_name="agendamento",
            name="profissional_saude",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="base.profissionalsaude",
            ),
        ),
    ]
